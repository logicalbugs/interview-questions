Find an element in sorted but rotated array.
Find if number is sum of a particular number and its reverse . For example , given 121 ,we will return one because it is sum of 92 and 29.
Find the unique elements in an array.
Next Greater Number of a given number using same digits.
Given a number of stairs, find the number of ways to reach the end.--fibonacci series
Kth largest element in the unsorted array in a single interaction--- MaxHeap
In given integer array, if any integer is repeating then replace it with a number greater than that number which has not been inserted yet in the array. 
Eg. 1, 3, 4, 5, 3       Output: 1, 3, 4, 5, 6

2,3,1,9,5,3
2,3,3,9,1,5
2,3,3,9,5,1
2,3,9,5,3,1

Write a program to find the nth Fibonacci number considering all test cases.

Given an array of 0's and 1's in any order. Find how many 0's to flipped to make maximum consecutive 1's.

Largest subarray with equal number of 0s and 1s.

Maximum Subarray problem. 

Two integer arrays. Find pair of indexes of pair with given sum. 
Median of a stream of integers, (Take two binary heap)
triplet sum equal to 0
Digits to word conversion
Given two sorted arrays of size m and n respectively, find the element that would be at the k-th position of the final sorted array.
Form the sum n from coins in bag with picking either 1 or 3 coins at a time. 
Find number of ways to make the given sum. All coins have same value.
A live stream of bits and a number k. Check whether the number formed after each bit is divisible by k or not.

Floor and Ceil of X in an array---- Floor is the greatest element which is less than X and Ciel is smallest element which is greater than X
Largest Sum Subarray(Maximum Average Subarray or Subarray Sum Equal to X) ---- Kadane's algorithm {max_so_far = arr[0], max_ending_here=0;}
Sort by Frequency ----
First and Second Smallest ----
Majority Element ---- Number present more than size/2 of array
Arrange Even and Odd ----
Merging two sorted arrays ----
Closest Sum Elements ----
Distinct Elements ----
First Repeating Number ---- keep a set and iterate from end instead of starts
Segregate 0s 1s and 2s ----
Find Occurrences of Number ----
Pythagorean Triplets ---- sort, iterate from last with l=0 and right=n-2
Triplet with given Sum ----
Common Elements in Arrays -----
Smallest Missing Number ----
Max Adjacent Sum ----
Rotate Image ---- Need to go through again atleast 4 times
Distance Between Numbers ---- 
Pair with given difference ----
Find next greater number ----
Leaders in Array ----> Always traverse from the right
Largest Pair Sum ---> take first largest and second largest -> iterate through the 2 to n change first and second largest accordingly then return (first+last)
Consecutive Elements Check ---- can use A.P. formula n/2*(2a+(n-1)*d)  d is the difference of sequence.
Fixed point in sorted array ----> Binary search is the solution 
Reorder array using given indexes ---> exchange one array element to other is the solution
Find the lost element from a duplicated array --- XOR of each element
Maximum element in an array which is increasing and then decreasing -- Binary Search

